% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plsAKO.R
\name{AKO_withKO}
\alias{AKO_withKO}
\title{Aggregated Knockoff (AKO) with Generated Knockoff Sets}
\usage{
AKO_withKO(
  X,
  y,
  Xko.list,
  q = 0.05,
  w.method = "lasso.lcd",
  offset = 0,
  gamma = 0.3,
  seed = 1,
  parallel = T,
  ncores = NULL
)
}
\arguments{
\item{X}{A \eqn{n \times p} numeric matrix or data frame of predictors.}

\item{y}{A numeric or factor response vector of length \eqn{n}.}

\item{Xko.list}{A list of knockoff variable matrices (\eqn{n \times p}) corresponding to the original matrix \code{X}.}

\item{q}{A numeric value of the target false discovery rate (FDR) level. Default is \eqn{0.05}.}

\item{w.method}{A string specifying the method to compute test statistics. Options are \code{"lasso.lcd"}, \code{"lasso.logistic"}, \code{"lasso.max.lambda"}, \code{"RF"}. Default is \code{"lasso.lcd"}.}

\item{offset}{An integer (0 or 1) specifying the offset in the empirical p-value calculation. Default is \eqn{0} (liberally control modified FDR with higher power). Other options include \eqn{1}, similar to "knockoffs+", yielding a slightly more conservative procedure that controls the FDR according to the usual definition.}

\item{gamma}{A numeric value for quantile aggregation in the multiple knockoff p-value aggregation. Default is \eqn{0.3}.}

\item{seed}{A numeric value for the random seed. Default is \eqn{1}.}

\item{parallel}{Logical value indicating whether to run the process in parallel. Default is \code{TRUE}.}

\item{ncores}{An integer specifying the number of cores to use for parallel processing. Default is NULL, which uses all available cores except one.}
}
\value{
A list of class 'AKO.result', containing:
\describe{
  \item{`s`}{A list of results from individual knockoff filters.}
  \item{`ako.s`}{The named vector of selected variables after aggregating knockoff results.}
  \item{`threshold`}{The FDR control threshold.}
}
}
\description{
Performs Aggregated Knockoff analysis with multiple knockoff sets to improve the stability of results. The function is adapted from Tian et al. (2022).
}
\examples{
# Example
set.seed(1)
X <- matrix(rnorm(100*10), 100, 10)
colnames(X) <- paste0("X", 1:10)
# randomly assign zero or one as coefficients to the variables
beta <- sample(c(0, 1), 10, replace = TRUE)
y <- X \%*\% beta + rnorm(100)

# Generate multiple knockoff sets (using the default knockoff generating function in \code{\link{knockoff::create.second_order}})
Xko.list <- lapply(1:15, function(i) knockoff::create.second_order(X))

# run the AKO filter
result <- AKO_withKO(X, y, Xko.list, q = 0.1, ncore = 4)
print(result)

# check the frequency of selected variables from iterations of single-run knockoffs
table(unlist(lapply(result$s, function(x) x$selected)))

# compare with the true coefficients
which(beta != 0)

}
\references{
Nguyen T-B, Chevalier J-A, Thirion B et al. Aggregation of Multiple Knockoffs. Proceedings of the 37th International Conference on Machine Learning. PMLR, 2020, 7283â€“93.

Tian P, Hu Y, Liu Z et al. Grace-AKO: a novel and stable knockoff filter for variable selection incorporating gene network structures. BMC Bioinformatics 2022;23:478.
}
