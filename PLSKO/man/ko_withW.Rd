% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ko_filter.R
\name{ko_withW}
\alias{ko_withW}
\title{Knockoff Filtering with Precomputed Test Statistics}
\usage{
ko_withW(W, q = 0.05, offset = 0, X.names = NULL)
}
\arguments{
\item{W}{A (named) numeric vector of test statistics. The length of the vector should be equal to the number of variables. The output will be names if this vector is named.}

\item{q}{A numeric value specifying the false discovery rate (FDR) level. Default is `0.05`.}

\item{offset}{A numeric or string value to adjust the knockoff threshold. Default is \eqn{0} (control modified FDR). Other options include \eqn{1} (yields a slightly more conservative procedure ("knockoffs+") that controls the FDR according to the usual definition) and \code{"both"} (returns results from both "knockoffs" and "knockoffs+").}

\item{X.names}{Optional. A character vector of variable names. If provided, the output will be named.}
}
\value{
An object of class "knockoff.result". This object is a list
 containing at least the following components:
\describe{
  \item{`call`}{The matched call.}
  \item{`statistic`}{The computed test statistics `W` of length \eqn{p}.}
  \item{`threshold`}{The knockoff threshold used to determine discoveries.}
  \item{`selected`}{The named vector of selected variables.}
}
}
\description{
Computes the knockoff threshold and selects variables based on the computed test statistics.
}
\examples{
# Example showing self-defined test statistics
set.seed(123)
n = 100
p = 10
# generate random test data that in one group, some random selected variables have a higher mean
X = matrix(rnorm(n*p), n, p)
colnames(X) = paste0("X", 1:p)
y = rep(0:1, each = n/2) #assign group
beta = sample(c(0, 1), p, replace = TRUE) # randomly assign zero or one as which variables have higher mean
X[y==1, beta==1] = X[y==1, beta==1] + rnorm(n/2, mean = 2) # add 2 to the mean of the selected variables

Xk <- plsko(X)

# generate self-defined test statistics
Z <- abs(apply(X[y==1,], 2, mean) - apply(X[y==0,], 2, mean)) # use difference of means as test statistics
Zk <- abs(apply(Xk[y==1,], 2, mean) - apply(Xk[y==0,], 2, mean))
W <- Z - Zk # compute the difference of test statistics between original and knockoff variables
names(W) <- colnames(X)

# run the knockoff filter
result <- ko_withW(W, q = 0.1)
print(result)
which(beta != 0) # compare with the true coefficients


}
